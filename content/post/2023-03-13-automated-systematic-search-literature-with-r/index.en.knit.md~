---
title: Automated systematic literature search using R, litsearchr, easyPubMed and
  Google Scholar web scraping
author: Claudiu C. Papasteri
date: '2023-03-13'
slug: automated-systematic-search-literature-with-r
categories:
  - R
  - metaverse
  - meta-analysis
  - webscraping
tags:
  - R
  - metaverse
  - meta-analysis
  - litsearchr
  - easyPubMed
subtitle: ''
summary: ''
authors: []
lastmod: '2023-03-13T21:09:03+02:00'
featured: yes
image:
  caption: ''
  focal_point: ''
  preview_only: yes
projects: []
---

<!--
blogdown::build_site(build_rmd = "E:/Github/cpapasteri.github.io/content/post/2023-03-13-automated-systematic-search-literature-with-r/index.en.Rmarkdown")
-->

### Introduction

-  `easyPubMed` package: simplifies the use of the PubMed API
-  my own Scholar Google Search web scraping function (this [gist](https://gist.github.com/ClaudiuPapasteri/7bef34394c395e03ee074f884ddbf4d4))











 

### Scholar Google web scraping

We will use: 

-  my Scholar Google search web scraping function to **quickly** extract a lot of literature info based on an preliminary *naive* search query. 
-  [`litsearchr`](https://elizagrames.github.io/litsearchr) for automated approach to identifying search terms for systematic reviews using keyword co-occurrence networks.
-  [`stopwords`](https://cran.r-project.org/web/packages/stopwords/readme/README.html) for the Stopwords ISO Dataset which is the most comprehensive collection of stopwords for multiple languages. 
-  [`igraph`](https://igraph.org/r/) for network analyses (this package is already a dependence of `litsearchr` but there are still many useful functions that are not wrapped by `litsearchr` functions). 
-  `ggplot2`, `ggraph`, and `ggrepel` for plotting. 

 

#### 1. Load or install packages


```
## 
## Attaching package: 'igraph'
```

```
## The following objects are masked from 'package:stats':
## 
##     decompose, spectrum
```

```
## The following object is masked from 'package:base':
## 
##     union
```

```
## [[1]]
## [1] "litsearchr" "stats"      "graphics"   "grDevices"  "utils"     
## [6] "datasets"   "methods"    "base"      
## 
## [[2]]
## [1] "stopwords"  "litsearchr" "stats"      "graphics"   "grDevices" 
## [6] "utils"      "datasets"   "methods"    "base"      
## 
## [[3]]
##  [1] "igraph"     "stopwords"  "litsearchr" "stats"      "graphics"  
##  [6] "grDevices"  "utils"      "datasets"   "methods"    "base"      
## 
## [[4]]
##  [1] "ggplot2"    "igraph"     "stopwords"  "litsearchr" "stats"     
##  [6] "graphics"   "grDevices"  "utils"      "datasets"   "methods"   
## [11] "base"      
## 
## [[5]]
##  [1] "ggraph"     "ggplot2"    "igraph"     "stopwords"  "litsearchr"
##  [6] "stats"      "graphics"   "grDevices"  "utils"      "datasets"  
## [11] "methods"    "base"      
## 
## [[6]]
##  [1] "ggrepel"    "ggraph"     "ggplot2"    "igraph"     "stopwords" 
##  [6] "litsearchr" "stats"      "graphics"   "grDevices"  "utils"     
## [11] "datasets"   "methods"    "base"
```

#### 2. Run the web scraping function

<script src="https://gist.github.com/ClaudiuPapasteri/7bef34394c395e03ee074f884ddbf4d4.js"></script>















